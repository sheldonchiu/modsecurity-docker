# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

monthly-run-workflow:
   triggers:
     - schedule:
         # Every month
         cron: "0 1 1 */1 *"
         filters:
           branches:
             only:
               - circleci-project-setup

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-x86:
    working_directory: /app
    docker:
      - image: docker:git
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - setup_remote_docker:
          version:  20.10.11
          # docker_layer_caching: true
      - run:
          name: Build application Docker image
          command: |
            docker build -t $DOCKER_ENDPOINT/modsecurity-nginx:manifest-amd64 --build-arg ARCH=amd64/ .
      - run:
          name: Push application Docker image
          command: |
              echo "$DOCKER_HUB_PWD" |docker login -u $DOCKER_HUB_USER_ID --password-stdin registry.gitlab.com
              docker push $DOCKER_ENDPOINT/modsecurity-nginx:manifest-amd64
  
  build-arm64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Build application Docker image
          command: |
            sudo apt-get remove -y docker docker-engine docker.io containerd runc
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update && sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            docker build -t $DOCKER_ENDPOINT/modsecurity-nginx:manifest-arm64v8 --build-arg ARCH=arm64v8/ .
      - run:
          name: Push application Docker image
          command: |
              echo "$DOCKER_HUB_PWD" |docker login -u $DOCKER_HUB_USER_ID --password-stdin registry.gitlab.com
              docker push $DOCKER_ENDPOINT/modsecurity-nginx:manifest-arm64v8
  upload-manifest:
    docker:
      - image: cimg/python:3.8.2
    steps:
      - deploy:
          name: "Upload manifest to registry"
          command: |
              set -eu
              export DOCKER_CLI_EXPERIMENTAL=enabled
              echo "$DOCKER_HUB_PWD" |docker login -u $DOCKER_HUB_USER_ID --password-stdin registry.gitlab.com
              docker manifest create $DOCKER_ENDPOINT/modsecurity-nginx:latest \
              --amend $DOCKER_ENDPOINT/modsecurity-nginx:manifest-arm64v8 \
              --amend $DOCKER_ENDPOINT/modsecurity-nginx:manifest-amd64
              docker manifest push $DOCKER_ENDPOINT/modsecurity-nginx:latest

              docker manifest create $DOCKER_ENDPOINT/modsecurity-nginx:$CIRCLE_SHA1 \
              --amend $DOCKER_ENDPOINT/modsecurity-nginx:manifest-arm64v8 \
              --amend $DOCKER_ENDPOINT/modsecurity-nginx:manifest-amd64
              docker manifest push $DOCKER_ENDPOINT/modsecurity-nginx:$CIRCLE_SHA1

workflows:
  build:
    jobs:
      - build-x86
      - build-arm64
      - upload-manifest:
          requires:
            - build-x86
            - build-arm64
              

